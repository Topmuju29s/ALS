//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Access_data.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class masterEntities : DbContext
    {
        public masterEntities()
            : base("name=masterEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<TB_M_Credit_Term> TB_M_Credit_Term { get; set; }
        public virtual DbSet<TB_M_Delivery_Type> TB_M_Delivery_Type { get; set; }
        public virtual DbSet<TB_M_STATUS> TB_M_STATUS { get; set; }
        public virtual DbSet<TB_R_BA> TB_R_BA { get; set; }
        public virtual DbSet<TB_R_CB_BA> TB_R_CB_BA { get; set; }
        public virtual DbSet<TB_R_CB_INVOICE> TB_R_CB_INVOICE { get; set; }
        public virtual DbSet<TB_R_CB_PACKAGE> TB_R_CB_PACKAGE { get; set; }
        public virtual DbSet<TB_R_INVOICE> TB_R_INVOICE { get; set; }
        public virtual DbSet<TB_R_PACKAGE> TB_R_PACKAGE { get; set; }
        public virtual DbSet<TB_S_BillingAppointmentReportData> TB_S_BillingAppointmentReportData { get; set; }
        public virtual DbSet<TB_S_BillingData> TB_S_BillingData { get; set; }
        public virtual DbSet<TB_S_CONFIG> TB_S_CONFIG { get; set; }
        public virtual DbSet<TB_S_InvoiceHeader> TB_S_InvoiceHeader { get; set; }
        public virtual DbSet<AggregatedCounter> AggregatedCounters { get; set; }
        public virtual DbSet<Hash> Hashes { get; set; }
        public virtual DbSet<Job> Jobs { get; set; }
        public virtual DbSet<JobParameter> JobParameters { get; set; }
        public virtual DbSet<JobQueue> JobQueues { get; set; }
        public virtual DbSet<List> Lists { get; set; }
        public virtual DbSet<Schema> Schemata { get; set; }
        public virtual DbSet<Server> Servers { get; set; }
        public virtual DbSet<Set> Sets { get; set; }
        public virtual DbSet<State> States { get; set; }
        public virtual DbSet<MSreplication_options> MSreplication_options { get; set; }
        public virtual DbSet<spt_fallback_db> spt_fallback_db { get; set; }
        public virtual DbSet<spt_fallback_dev> spt_fallback_dev { get; set; }
        public virtual DbSet<spt_fallback_usg> spt_fallback_usg { get; set; }
        public virtual DbSet<spt_monitor> spt_monitor { get; set; }
        public virtual DbSet<Counter> Counters { get; set; }
        public virtual DbSet<spt_values> spt_values { get; set; }
        public virtual DbSet<vBillingAppointment> vBillingAppointments { get; set; }
        public virtual DbSet<vCB_BillingAppointment> vCB_BillingAppointment { get; set; }
        public virtual DbSet<vCB_PackageList> vCB_PackageList { get; set; }
        public virtual DbSet<vPackage> vPackages { get; set; }
        public virtual DbSet<vPackageList> vPackageLists { get; set; }
    
        public virtual int sp_MScleanupmergepublisher()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MScleanupmergepublisher");
        }
    
        public virtual int sp_MSrepl_startup()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MSrepl_startup");
        }
    
        public virtual int usp_AdhocListInvoiceByInvoiceAddress(string iNVOICE_ID)
        {
            var iNVOICE_IDParameter = iNVOICE_ID != null ?
                new ObjectParameter("INVOICE_ID", iNVOICE_ID) :
                new ObjectParameter("INVOICE_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AdhocListInvoiceByInvoiceAddress", iNVOICE_IDParameter);
        }
    
        public virtual ObjectResult<string> usp_CriteriaSearchBillingAppointment(string bA_NO)
        {
            var bA_NOParameter = bA_NO != null ?
                new ObjectParameter("BA_NO", bA_NO) :
                new ObjectParameter("BA_NO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_CriteriaSearchBillingAppointment", bA_NOParameter);
        }
    
        public virtual int usp_GetNewRunningNo(string isBilling)
        {
            var isBillingParameter = isBilling != null ?
                new ObjectParameter("IsBilling", isBilling) :
                new ObjectParameter("IsBilling", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetNewRunningNo", isBillingParameter);
        }
    }
}
